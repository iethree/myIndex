{"version":3,"sources":["inputs.js","utilities.js","index.js"],"names":["TextInput","props","react_default","a","createElement","className","type","value","placeholder","name","onChange","e","target","required","RadioInput","options","map","option","key","getAllCategories","dewey","categoryIdList","categories","i","cnt","push","pagesToCount","read","Number","pages","fetcher","_x","_x2","_fetcher","apply","this","arguments","_callee","endpoint","data","regenerator_default","wrap","_context","prev","next","abrupt","Promise","resolve","reject","fetch","method","headers","Content-Type","body","JSON","stringify","then","r","json","catch","console","log","stop","App","document","title","_useState","useState","_useState2","Object","slicedToArray","reads","setReads","_useState3","_useState4","setCategories","_useState5","_useState6","showForm","setShowForm","useEffect","dbReads","status","dbCategories","Wrapper","ReadEntry","addRead","newRead","concat","toConsumableArray","hide","onClick","Fragment","SummaryDisplay","ReadList","_useState7","_useState8","setTitle","_useState9","_useState10","author","setAuthor","_useState11","_useState12","setPages","_useState13","_useState14","setRead","_useState15","_useState16","setDewey","_useState17","_useState18","message","setMessage","isValidDewey","match","_submit","asyncToGenerator","mark","formData","result","preventDefault","getElementById","classList","add","date","Date","sent","remove","clearInput","id","pageDisplay","_getPageCounts","keys","sort","totalPages","detailPageCounts","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","undefined","_step2","_iterator2","Symbol","iterator","done","itemCategories","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","category","err","return","getPageCounts","_getPageCounts2","pageCounts","parsePageCounts","children","ReactDOM","render"],"mappings":"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","file":"static/js/main.0fe8d365.chunk.js","sourcesContent":["//Inputs\r\nimport React from 'react';\r\n\r\nexport function TextInput(props){\r\n  return(\r\n    <div className=\"field\">\r\n      <div className=\"control\">\r\n        <input\r\n          type={props.type || \"text\"} \r\n          value={props.value}\r\n          className=\"input\" \r\n          placeholder={props.placeholder|| props.name} \r\n          name={props.name}\r\n          onChange={(e)=>props.onChange(e.target.value)}\r\n          required={true}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function RadioInput(props){\r\n  return(\r\n    <div className=\"control\">\r\n      <div className=\"label\">Read?</div>\r\n      {props.options.map(option=>\r\n        <label className=\"radio\" key={option}>\r\n          <input type=\"radio\" \r\n            name={props.name} \r\n            value={option} \r\n            onChange={(e)=>props.onChange(e.target.value)} \r\n            required={true} \r\n          />\r\n          &nbsp;{option}\r\n        </label>\r\n      )}\r\n    </div>\r\n  );  \r\n}\r\n","//actual business logic functions\r\n\r\n/**\r\n * get the first dewey decimal category into which an item falls (not used)\r\n * \r\n * @param {string} dewey dewey decimal for which to find a category\r\n * @param {array} categoryIdList sorted array of string dewey decimal categories\r\n * @returns {string} first category into which an item falls, or an empty string if it doesn't fall anywhere\r\n */\r\nexport function getOneCategory(dewey, categoryIdList) {\r\n  for (let i of categoryIdList) {\r\n    if (i[0] === dewey[0]) return i;\r\n  }\r\n  return '';\r\n}\r\n\r\n/**\r\n * get up to 3 dewey decimal categories into which an item falls\r\n * \r\n * @param {string} dewey dewey decimal for which to find a category\r\n * @param {array} categoryIdList sorted array of string dewey decimal categories\r\n * @returns {array} array of strings of category IDs into which an item falls\r\n */\r\nexport function getAllCategories(dewey, categoryIdList) {\r\n  var categories = [];\r\n  var i = \"000\";\r\n  for (let cnt = 0; i < dewey; cnt++) {\r\n    i = categoryIdList[cnt];\r\n\r\n    //check the first three characters\r\n    if (i[0] === dewey[0]) {\r\n      if (i[1] === \"0\" && i[2] === \"0\")\r\n        categories.push(i);\r\n      else if (i[1] === dewey[1] && i[2] === \"0\")\r\n        categories.push(i);\r\n      else if (i[1] === dewey[1] && i[2] === dewey[2])\r\n        categories.push(i);\r\n    }\r\n  }\r\n  return categories;\r\n}\r\n\r\n/** \r\n * get total pages and details for each dewey decimal category\r\n * \r\n * @param {array} reads list of read items\r\n * @param {object} categories hash of category numbers and names\r\n * @returns {array} [totalPages, detailPageCounts]\r\n * \r\n */\r\nexport function getPageCounts(reads, categories) {\r\n  var categoryIdList = Object.keys(categories).sort();\r\n  var totalPages = 0;\r\n  var detailPageCounts = {};\r\n\r\n  for (let read of reads) {\r\n    totalPages += pagesToCount(read);\r\n\r\n    var itemCategories = getAllCategories(read.dewey, categoryIdList);\r\n\r\n    for (let category of itemCategories) {\r\n      if (detailPageCounts[category]) //if there are already pages in the category\r\n        detailPageCounts[category] += pagesToCount(read);\r\n      else\r\n        detailPageCounts[category] = pagesToCount(read);\r\n    }\r\n  }\r\n  return [totalPages, detailPageCounts];\r\n}\r\n\r\n/**\r\n * determine how many pages to count\r\n * \r\n * @param {Object} read read item\r\n * @returns {number} number of pages to count\r\n */\r\nfunction pagesToCount(read) {\r\n  if (read.read === \"Fully\") return Number(read.pages);\r\n  if (read.read === \"Partially\") return Number(read.pages / 2);\r\n  else return 0;\r\n}\r\n\r\n/**\r\n * send/receive data from backend\r\n * \r\n * @param {string} endpoint \r\n * @param {object} data \r\n */\r\nexport async function fetcher(endpoint, data) {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(endpoint, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(data)\r\n      }).then((r) => r.json()).then((r) => resolve(r))\r\n      .catch((e) => console.log(e));\r\n  });\r\n}","//LittleFoot Library front-end\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport React, {useState, useEffect} from 'react';\r\n\r\nimport {TextInput, RadioInput} from './inputs.js';\r\nimport { getPageCounts, fetcher } from './utilities.js';\r\nimport './library.sass';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n//main app component\r\nexport default function App(props){\r\n  document.title=\"Littlefoot Library\";\r\n\r\n  const [reads, setReads] = useState(null);\r\n  const [categories, setCategories] = useState(null);\r\n  const [showForm, setShowForm] = useState(true);\r\n  \r\n  // load data from db on start\r\n  // potential issue if user data is entered really fast\r\n  useEffect(()=>{\r\n    fetcher('/data/getAllReads', {})\r\n    .then(dbReads=>{\r\n      if(dbReads.status)\r\n        setReads(dbReads.reads);\r\n    });\r\n\r\n    fetcher('/data/getCategories', {})\r\n    .then(dbCategories=>{\r\n      if(dbCategories.status)\r\n        setCategories(dbCategories.categories); \r\n    });\r\n    \r\n  },[]);\r\n\r\n  function addRead(newRead){\r\n    setReads([newRead, ...reads]);\r\n  }\r\n\r\n  return(\r\n    <Wrapper>\r\n      <h1 className=\"title is-3 has-text-centered has-text-primary\">Littlefoot Library</h1>\r\n      {\r\n        showForm \r\n        ? <ReadEntry addRead = {addRead} hide={()=>setShowForm(false)} />\r\n        : <button className=\"button is-primary\" onClick={()=>setShowForm(true)}> Add Read Record </button>\r\n      }\r\n      {\r\n        reads && categories\r\n        ? <React.Fragment>\r\n            <SummaryDisplay reads={reads} categories = {categories} />\r\n            <ReadList reads={reads} />\r\n          </React.Fragment>\r\n        : null\r\n      }\r\n    </Wrapper> \r\n  );\r\n}\r\n\r\nfunction ReadEntry(props){\r\n  const [title, setTitle]=useState('');\r\n  const [author, setAuthor]=useState('');\r\n  const [pages, setPages]=useState('');\r\n  const [read, setRead]=useState('');\r\n  const [dewey, setDewey]=useState('');\r\n\r\n  const [message, setMessage]=useState('');\r\n\r\n  function isValidDewey(dewey){\r\n    if (dewey.match(/^\\d{3}\\.\\d/)) \r\n       return true;\r\n    else \r\n       return false;\r\n  }\r\n\r\n  async function submit(e){\r\n    e.preventDefault();\r\n    \r\n    if(pages > 0 && isValidDewey(dewey) && read){\r\n      document.getElementById(\"saveButton\").classList.add('is-loading');\r\n      \r\n      var formData = {\r\n        title: title,\r\n        author: author,\r\n        pages: pages,\r\n        dewey: dewey,\r\n        read: read,\r\n        date: new Date()\r\n      };\r\n\r\n      props.addRead(formData);\r\n      var result = await fetcher('/data/saveRead', formData);\r\n      document.getElementById(\"saveButton\").classList.remove('is-loading');\r\n    \r\n      if(result.status){\r\n        clearInput();\r\n        setMessage('Record Saved');\r\n      } \r\n      else \r\n        setMessage('Error Saving');\r\n    }\r\n    else\r\n      setMessage(\"Missing or invalid input\");\r\n    \r\n  }\r\n\r\n  function clearInput(){\r\n    setDewey('');\r\n    setRead('');\r\n    setTitle('');\r\n    setAuthor('');\r\n    setPages('');\r\n  };\r\n\r\n  return(\r\n    <div className=\"box\">\r\n      <form>\r\n        <h4 className=\"title is-5\">New Read Record</h4>\r\n\r\n        <TextInput name=\"Title\" onChange={setTitle} value={title}/>\r\n        <TextInput name=\"Author\" onChange={setAuthor} value={author}/>\r\n        <TextInput name=\"Pages\" type=\"number\" onChange={setPages} value={pages}/>\r\n        <TextInput name=\"Dewey Decimal\" onChange={setDewey} value={dewey}/>\r\n        <RadioInput name=\"Read\" options = {[\"Fully\", \"Partially\", \"Unread\"]} onChange={setRead} />\r\n        <br />\r\n        \r\n        <div className=\"buttons is-centered\">\r\n          <button id=\"saveButton\" className=\"button is-primary\" type=\"submit\" onClick={submit}>Save</button>\r\n          <button  className=\"button\"  onClick={props.hide}>Close</button>\r\n        </div>\r\n        \r\n        {message ? <div className=\"has-text-centered has-text-danger\">{message}</div> : null}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SummaryDisplay(props){\r\n   \r\n   //build ouput\r\n   function parsePageCounts(categories, reads){\r\n      var pageDisplay=[];\r\n      var [totalPages, pageCounts] = getPageCounts(categories, reads);\r\n\r\n      pageDisplay.push(<div key = \"total\">Total Pages Read: {totalPages} </div>)\r\n      pageDisplay.push(<div key = \"categories\">By Category:</div>)\r\n      \r\n      for(let category in pageCounts){\r\n         if(pageCounts[category]>0)\r\n            pageDisplay.push(\r\n               <div className=\"indent\" key = {category}>{props.categories[category]} : {pageCounts[category]}</div>\r\n            );\r\n      }\r\n      return pageDisplay;\r\n   }  \r\n\r\n   return(\r\n      <div className=\"summaryDisplay has-text-left\">\r\n         <h3 className=\"title is-5 has-text-centered\">Reading Summary</h3>\r\n         <div>\r\n          {parsePageCounts(props.reads, props.categories)}\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nfunction ReadList(props){\r\n  return(\r\n    <div>\r\n       <h3 className=\"title is-5\">Books Read</h3>\r\n        {props.reads.map(read=>\r\n          <div className=\"read-item\" key = {read.date}>\r\n            <div className = \"read-left\">\r\n               <div key=\"title\"> <strong>{read.title}</strong></div>\r\n               <div key = \"author\"> {read.author} </div>\r\n            </div>\r\n            <div className = \"read-right\">\r\n               <div key = \"dewey\"> {read.dewey} </div>\r\n               <div key = \"pages\"> {read.pages} pages ({read.read}) </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Wrapper(props){\r\n  return(\r\n    <div className=\"main\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}